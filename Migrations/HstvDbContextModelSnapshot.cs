// <auto-generated />
using System;
using HSTV_Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HSTV_Api.Migrations
{
    [DbContext(typeof(HstvDbContext))]
    partial class HstvDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HSTV_Api.Models.Amount", b =>
                {
                    b.Property<int>("AmountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AmountId"));

                    b.Property<DateTime>("Offering_Given")
                        .HasColumnType("datetime2");

                    b.HasKey("AmountId");

                    b.ToTable("Amounts");
                });

            modelBuilder.Entity("HSTV_Api.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("HSTV_Api.Models.Subscribers", b =>
                {
                    b.Property<int>("SubscriberId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriberId"));

                    b.Property<DateTime>("Birthday_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CurrentTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Db_moved")
                        .HasColumnType("int");

                    b.Property<string>("Donation_categories")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Exhibition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FamilyId")
                        .HasColumnType("int");

                    b.Property<int>("Financial_partner")
                        .HasColumnType("int");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gdop")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gmfs_registered")
                        .HasColumnType("int");

                    b.Property<string>("Hslhs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Hsopc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Hsopc_moved")
                        .HasColumnType("int");

                    b.Property<string>("Httnlive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ip_address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_kc_confirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Is_valid_email")
                        .HasColumnType("bit");

                    b.Property<string>("Kc_phone_number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Login_time")
                        .HasColumnType("datetime2");

                    b.Property<int>("Participants")
                        .HasColumnType("int");

                    b.Property<int>("Partner")
                        .HasColumnType("int");

                    b.Property<DateTime>("Partner_regdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone_Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Presubscribed")
                        .HasColumnType("int");

                    b.Property<string>("Previous_student")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Seen")
                        .HasColumnType("int");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Translator")
                        .HasColumnType("int");

                    b.Property<int>("Unsubscribed")
                        .HasColumnType("int");

                    b.Property<int>("Vc_Id")
                        .HasColumnType("int");

                    b.Property<string>("View_lang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ylw")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZoneId")
                        .HasColumnType("int");

                    b.HasKey("SubscriberId");

                    b.HasIndex("CountryId");

                    b.ToTable("Subscribers");
                });

            modelBuilder.Entity("HSTV_Api.Models.Subscribers", b =>
                {
                    b.HasOne("HSTV_Api.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });
#pragma warning restore 612, 618
        }
    }
}
